globals
    integer hunter_code         = HEAD_HUNTER
    boolean b_hero1_done        = false
    boolean b_hero2_done        = false
    boolean b_hero3_done        = false
    integer c_altar_done        = 0
    integer c_barracks_done     = 0
    integer c_batrider          = 0
    integer c_batrider_done     = 0
    integer c_bestiary_done     = 0
    integer c_burrow            = 0
    integer c_burrow_done       = 0
    integer c_cat               = 0
    integer c_cat_done          = 0
    integer c_doc               = 0
    integer c_doc_done          = 0
    integer c_food_made         = 0
    integer c_food_used         = 0
    integer c_forge_done        = 0
    integer c_fortress          = 0
    integer c_fortress_done     = 0
    integer c_ensnare           = 0
    integer c_gold              = 0
    integer c_great_hall        = 0
    integer c_great_hall_done   = 0
    integer c_grunt             = 0
    integer c_grunt_done        = 0
    integer c_hero1             = 0
    integer c_hero1_done        = 0
    integer c_hero2             = 0
    integer c_hero2_done        = 0
    integer c_hero3             = 0
    integer c_hero3_done        = 0
    integer c_hunter            = 0
    integer c_hunter_done       = 0
    integer c_kodo              = 0
    integer c_kodo_done         = 0
    integer c_lodge_done        = 0
    integer c_mines             = 0
    integer c_peon              = 0
    integer c_peon_done         = 0
    integer c_raider            = 0
    integer c_raider_done       = 0
    integer c_shaman            = 0
    integer c_shaman_done       = 0
    integer c_stronghold        = 0
    integer c_stronghold_done   = 0
    integer c_swalker           = 0
    integer c_swalker_done      = 0
    integer c_tauren            = 0
    integer c_tauren_done       = 0
    integer c_totem_done        = 0
    integer c_voodoo_done       = 0
    integer c_wyvern            = 0
    integer c_wyvern_done       = 0
    integer c_zep               = 0
endglobals
function set_skills takes nothing returns nothing
    set skill[ 1] = MIRROR_IMAGE
    set skill[ 2] = CRITICAL_STRIKE
    set skill[ 3] = WIND_WALK
    set skill[ 4] = MIRROR_IMAGE
    set skill[ 5] = MIRROR_IMAGE
    set skill[ 6] = BLADE_STORM
    set skill[ 7] = CRITICAL_STRIKE
    set skill[ 8] = CRITICAL_STRIKE
    set skill[ 9] = WIND_WALK
    set skill[10] = WIND_WALK
    call SetSkillArray(1,BLADE_MASTER)
    call SetSkillArray(2,BLADE_MASTER)
    call SetSkillArray(3,BLADE_MASTER)
    set skill[ 1] = CHAIN_LIGHTNING
    set skill[ 2] = SPIRIT_WOLF
    set skill[ 3] = CHAIN_LIGHTNING
    set skill[ 4] = SPIRIT_WOLF
    set skill[ 5] = CHAIN_LIGHTNING
    set skill[ 6] = EARTHQUAKE
    set skill[ 7] = SPIRIT_WOLF
    set skill[ 8] = FAR_SIGHT
    set skill[ 9] = FAR_SIGHT
    set skill[10] = FAR_SIGHT
    call SetSkillArray(1,FAR_SEER)
    call SetSkillArray(2,FAR_SEER)
    call SetSkillArray(3,FAR_SEER)
    set skill[ 1] = SHOCKWAVE
    set skill[ 2] = ENDURANE_AURA
    set skill[ 3] = SHOCKWAVE
    set skill[ 4] = ENDURANE_AURA
    set skill[ 5] = SHOCKWAVE
    set skill[ 6] = REINCARNATION
    set skill[ 7] = ENDURANE_AURA
    set skill[ 8] = WAR_STOMP
    set skill[ 9] = WAR_STOMP
    set skill[10] = WAR_STOMP
    call SetSkillArray(1,TAUREN_CHIEF)
    call SetSkillArray(2,TAUREN_CHIEF)
    call SetSkillArray(3,TAUREN_CHIEF)
    set skill[ 1] = HEALING_WAVE
    set skill[ 2] = SERPENT_WARD
    set skill[ 3] = HEALING_WAVE
    set skill[ 4] = SERPENT_WARD
    set skill[ 5] = HEALING_WAVE
    set skill[ 6] = VOODOO
    set skill[ 7] = SERPENT_WARD
    set skill[ 8] = HEX
    set skill[ 9] = HEX
    set skill[10] = HEX
    call SetSkillArray(1,SHADOW_HUNTER)
    call SetSkillArray(2,SHADOW_HUNTER)
    call SetSkillArray(3,SHADOW_HUNTER)
endfunction
function setup_force takes nothing returns nothing
    call AwaitMeleeHeroes()
    call InitMeleeGroup()
    call SetMeleeGroup( hero_id         )
    call SetMeleeGroup( hero_id2        )
    call SetMeleeGroup( hero_id3        )
    call SetMeleeGroup( GRUNT           )
    call SetMeleeGroup( RAIDER          )
    call SetMeleeGroup( TAUREN          )
    call SetMeleeGroup( HEAD_HUNTER     )
    call SetMeleeGroup( BERSERKER       )
    call SetMeleeGroup( WYVERN          )
    call SetMeleeGroup( WITCH_DOCTOR    )
    call SetMeleeGroup( SHAMAN          )
    call SetMeleeGroup( KODO_BEAST      )
    call SetMeleeGroup( BATRIDER        )
    call SetMeleeGroup( SPIRIT_WALKER   )
    call SetMeleeGroup( SPIRIT_WALKER_M )
    call SetInitialWave(10)
endfunction
function force_level takes nothing returns integer
    local integer level = 4
    set level = level + 2 * (c_hunter_done + c_raider_done + c_batrider_done + c_shaman_done + c_doc_done + c_swalker_done+ c_grunt_done + c_kodo_done)
    set level = level + 3 * c_wyvern_done
    set level = level + 5 * (c_hero3_done + c_tauren_done)
    set level = level + 6 *  c_hero2_done
    return level
endfunction
function attack_sequence takes nothing returns nothing
    local boolean needs_exp
    local boolean has_siege
    local boolean air_units
    local integer level
    loop
        exitwhen c_hero1_done > 0 and c_grunt_done >= 2
        call Sleep(2)
    endloop
    if MeleeDifficulty() == MELEE_NEWBIE then
        call Sleep(240)
    endif
    call StaggerSleep(0,2)
    loop
        loop
            exitwhen not CaptainRetreating()
            call Sleep(2)
        endloop
        call setup_force()
        set level = force_level()
        set max_creeps = level * 4 / 5
        set min_creeps = max_creeps - 10
        if min_creeps < 0 then
            set min_creeps = 0
        endif
        set needs_exp        = take_exp and level >= 12
        set has_siege        = level >= 40 or 2*c_cat_done + c_raider_done + c_batrider_done >= 2
        set air_units        = c_wyvern_done > 0 or c_batrider_done > 0
        set allow_air_creeps = c_wyvern_done + c_ensnare + c_hunter_done >= 3
        call SingleMeleeAttack(needs_exp,has_siege,false,air_units)
        if MeleeDifficulty() == MELEE_NEWBIE then
            call Sleep(60)
        endif
    endloop
endfunction
function init_vars takes nothing returns nothing
    if GetUpgradeLevel(UPG_ORC_BERSERK) >= 1 then
        set hunter_code = BERSERKER
    else
        set hunter_code = HEAD_HUNTER
    endif
    set b_hero1_done        = GetUnitCountDone(hero_id) >= 1
    set b_hero2_done        = GetUnitCountDone(hero_id2) >= 1
    set b_hero3_done        = GetUnitCountDone(hero_id3) >= 1
    set c_altar_done        = GetUnitCountDone(ORC_ALTAR)
    set c_barracks_done     = GetUnitCountDone(ORC_BARRACKS)
    set c_batrider          = GetUnitCount(BATRIDER)
    set c_batrider_done     = GetUnitCountDone(BATRIDER)
    set c_bestiary_done     = GetUnitCountDone(BESTIARY)
    set c_burrow            = GetUnitCount(BURROW)
    set c_burrow_done       = GetUnitCountDone(BURROW)
    set c_cat               = GetUnitCount(CATAPULT)
    set c_cat_done          = GetUnitCountDone(CATAPULT)
    set c_doc               = GetUnitCount(WITCH_DOCTOR)
    set c_doc_done          = GetUnitCountDone(WITCH_DOCTOR)
    set c_food_made         = c_great_hall * GetFoodMade(GREAT_HALL) + c_burrow * GetFoodMade(BURROW)
    set c_food_used         = FoodUsed()
    set c_forge_done        = GetUnitCountDone(FORGE)
    set c_fortress          = TownCount(FORTRESS)
    set c_fortress_done     = TownCountDone(FORTRESS)
    set c_gold              = GetGold()
    set c_great_hall        = TownCount(GREAT_HALL)
    set c_great_hall_done   = TownCountDone(GREAT_HALL)
    set c_grunt             = GetUnitCount(GRUNT)
    set c_grunt_done        = GetUnitCountDone(GRUNT)
    set c_hero1             = GetUnitCount(hero_id)
    set c_hero1_done        = GetUnitCountDone(hero_id)
    set c_hero2             = GetUnitCount(hero_id2)
    set c_hero2_done        = GetUnitCountDone(hero_id2)
    set c_hero3             = GetUnitCount(hero_id3)
    set c_hero3_done        = GetUnitCountDone(hero_id3)
    set c_hunter            = TownCount(HEAD_HUNTER)
    set c_hunter_done       = TownCountDone(HEAD_HUNTER)
    set c_kodo              = GetUnitCount(KODO_BEAST)
    set c_kodo_done         = GetUnitCountDone(KODO_BEAST)
    set c_lodge_done        = GetUnitCountDone(LODGE)
    set c_mines             = GetMinesOwned()
    set c_peon              = GetUnitCount(PEON)
    set c_peon_done         = GetUnitCountDone(PEON)
    set c_raider            = GetUnitCount(RAIDER)
    set c_raider_done       = GetUnitCountDone(RAIDER)
    set c_shaman            = GetUnitCount(SHAMAN)
    set c_shaman_done       = GetUnitCountDone(SHAMAN)
    set c_stronghold        = TownCount(STRONGHOLD)
    set c_stronghold_done   = TownCountDone(STRONGHOLD)
    set c_swalker           = TownCount(SPIRIT_WALKER_M)
    set c_swalker_done      = TownCountDone(SPIRIT_WALKER_M)
    set c_tauren            = GetUnitCount(TAUREN)
    set c_tauren_done       = GetUnitCountDone(TAUREN)
    set c_totem_done        = GetUnitCountDone(TOTEM)
    set c_voodoo_done       = GetUnitCountDone(VOODOO_LOUNGE)
    set c_wyvern            = GetUnitCount(WYVERN)
    set c_wyvern_done       = GetUnitCountDone(WYVERN)
    set c_zep               = GetUnitCount(ZEPPELIN)
    if GetUpgradeLevel(UPG_ORC_ENSNARE) > 0 then
        set c_ensnare = c_raider_done
    else
        set c_ensnare = 0
    endif
endfunction
function set_vars takes nothing returns nothing
    loop
        call init_vars()
        call Sleep(1)
    endloop
endfunction
function do_upgrades takes nothing returns nothing
	if c_barracks_done >= 1 then
		if c_fortress_done >= 1 and c_grunt_done >= 2 then
			call SetBuildUpgr( 1, UPG_ORC_BERSERK )    
		endif
		if c_stronghold_done >= 1 and c_hunter_done >= 2 then
			call SetBuildUpgr( 1, UPG_ORC_REGEN )
			if c_fortress_done >= 1 then
				call SetBuildUpgr( 1, UPG_ORC_BERSERKER )
			endif
		endif
	endif
    if c_totem_done >= 1 and c_tauren_done >= 1 then
        call SetBuildUpgr( 1, UPG_ORC_PULVERIZE )
    endif
    if c_bestiary_done >= 1 then
        if c_raider_done >= 1 then
            call SetBuildUpgr( 1, UPG_ORC_ENSNARE )
        endif
        if c_fortress_done >= 1 then
            if c_kodo_done >= 1 then
                call SetBuildUpgr( 1, UPG_ORC_WAR_DRUMS )
            endif
            if c_wyvern_done >= 1 then
                call SetBuildUpgr( 1, UPG_ORC_VENOM )      
            endif
            if c_batrider_done >= 1 then
                call SetBuildUpgr( 1, UPG_ORC_FIRE  )
            endif
        endif
    endif
    if c_lodge_done >= 1 then
		if c_shaman_done >= 2 then
			call SetBuildUpgr( 1, UPG_ORC_SHAMAN  )
            if c_fortress_done >= 1 then
                call SetBuildUpgr( 2, UPG_ORC_SHAMAN  ) 
            endif
		endif
		if c_doc_done >= 2 then
			call SetBuildUpgr( 1, UPG_ORC_DOCS    )
            if c_fortress_done >= 1 then
                call SetBuildUpgr( 2, UPG_ORC_DOCS    ) 
            endif
		endif
		if c_swalker_done >= 1 then
			call SetBuildUpgr( 1, UPG_ORC_SWALKER )
            if c_fortress_done >= 1 then
                call SetBuildUpgr( 2, UPG_ORC_SWALKER )
            endif
		endif
    endif
    if c_forge_done >= 1 and c_gold > 300 then
		call SetBuildUpgr( 1, UPG_ORC_MELEE     )
		call SetBuildUpgr( 1, UPG_ORC_RANGED    )
		call SetBuildUpgr( 1, UPG_ORC_ARMOR     )
		call SetBuildUpgr( 1, UPG_ORC_SPIKES    )
        if c_stronghold_done >= 1 then
            call SetBuildUpgr( 2, UPG_ORC_MELEE     )
            call SetBuildUpgr( 2, UPG_ORC_RANGED    )
            call SetBuildUpgr( 2, UPG_ORC_ARMOR     )
            call SetBuildUpgr( 2, UPG_ORC_SPIKES    )
			if c_fortress_done >= 1 then
				call SetBuildUpgr( 1, UPG_ORC_BURROWS   )
				call SetBuildUpgr( 3, UPG_ORC_MELEE     )
				call SetBuildUpgr( 3, UPG_ORC_RANGED    )
				call SetBuildUpgr( 3, UPG_ORC_ARMOR     )
				call SetBuildUpgr( 3, UPG_ORC_SPIKES    )
			endif
        endif
    endif
endfunction
function build_sequence takes nothing returns nothing
    local integer worker
	local integer rnd = GetRandomInt(1,3)
    call InitBuildArray()
	set worker = c_mines * 5 + 8
	if worker < 3 then
		set worker = 3
	endif
	if c_food_used <= 95 and c_peon == c_peon_done and c_peon_done < worker and c_great_hall == c_great_hall_done then
		call SetBuildUnit( c_peon_done+1, PEON )
	endif
	if c_food_used + 5 >= c_food_made and c_food_made < 100 then
		call SetBuildUnit( c_burrow_done+1, BURROW )
	endif
	if c_great_hall_done < 1 and c_peon_done > 0 then
		call SetBuildUnit( 1, GREAT_HALL )
	endif
	if c_altar_done < 1 then
		call SetBuildUnit( 1, ORC_ALTAR )
	elseif c_food_used <= 95 and c_hero1 == c_hero1_done and c_hero2 == c_hero2_done and c_hero3 == c_hero3_done then
		if b_hero1_done then
			if b_hero2_done then
				if b_hero3_done or c_fortress_done > 0 then
					call SetBuildUnit( 1, hero_id3 )
				endif
			elseif c_stronghold_done > 0 then
				call SetBuildUnit( 1, hero_id2 )
			endif
		else
			call SetBuildUnit( 1, hero_id )
		endif
	endif
	if c_barracks_done < 1 then
		call SetBuildUnit( 1, ORC_BARRACKS )
	elseif c_food_used <= 95 and c_grunt == c_grunt_done and c_hunter == c_hunter_done then
		if c_totem_done < 1 and ((c_forge_done < 1 or rnd == 1) and c_grunt_done < 6) then
			call SetBuildUnit( c_grunt_done+1, GRUNT ) 
		elseif c_forge_done > 0 and c_hunter_done < 4 then
			call SetBuildUnit( c_hunter_done+1, hunter_code ) 
		endif
	endif
	if c_voodoo_done < 1 then
		call SetBuildUnit( 1, VOODOO_LOUNGE )
	endif
	if c_forge_done < 1 then
		call SetBuildUnit( 1, FORGE )
	endif
	if c_great_hall_done > 0 and c_stronghold < 1 and worker <= c_peon_done then
		call SetBuildUnit( 1, STRONGHOLD )
	endif
	call BasicExpansion( c_mines < 2 and c_hunter_done >= 3, GREAT_HALL )
	if c_mines > 1 and c_gold > 300 then
		if TownCountEx(GREAT_HALL,false,1) > 0 then
			call SecondaryTown( 1, 2, ORC_WATCH_TOWER )
		endif
		if TownCountEx(GREAT_HALL,false,2) > 0 then
			call SecondaryTown( 2, 2, ORC_WATCH_TOWER )
		endif
		if TownCountEx(GREAT_HALL,false,3) > 0 then
			call SecondaryTown( 3, 2, ORC_WATCH_TOWER )
		endif
	elseif c_mines < 1 and c_gold < 800 then
		return
	endif
	call do_upgrades()
	if c_stronghold_done > 0 and c_fortress < 1 and worker <= c_peon_done and c_wyvern + c_raider + c_batrider + c_kodo + c_shaman + c_doc + c_swalker > 5 then
		call SetBuildUnit( 1, FORTRESS )
	endif
	if c_bestiary_done < 1 then
		call SetBuildUnit( 1, BESTIARY )
	elseif c_food_used <= 95 and c_wyvern == c_wyvern_done and c_raider == c_raider_done and c_batrider == c_batrider_done and c_kodo == c_kodo_done then
		call SetBuildUnit( 1, KODO_BEAST ) 
		if rnd == 1 and c_wyvern_done < 3 then
			call SetBuildUnit( c_wyvern_done+1, WYVERN ) 
		elseif rnd == 2 and c_raider_done < 4 then
			call SetBuildUnit( c_raider_done+1, RAIDER ) 
		elseif c_batrider_done < 2 then
			call SetBuildUnit( c_batrider_done+1, BATRIDER ) 
		endif
	endif
	if c_lodge_done < 1 then
		call SetBuildUnit( 1, LODGE )
	elseif c_food_used <= 95 and c_shaman == c_shaman_done and c_doc == c_doc_done and c_swalker == c_swalker_done then
		if rnd == 1 and c_shaman_done < 3 then
			call SetBuildUnit( c_shaman_done+1, SHAMAN ) 
		elseif rnd == 2 and c_doc_done < 2 then
			call SetBuildUnit( c_doc_done+1, WITCH_DOCTOR ) 
		elseif c_swalker_done < 2 then
			call SetBuildUnit( c_swalker_done+1, SPIRIT_WALKER_M ) 
		endif
	endif
	if c_totem_done < 1 then
		if c_fortress_done > 0 then
			call SetBuildUnit( 1, TOTEM )
		endif
	elseif c_food_used <= 95 and c_tauren == c_tauren_done and c_tauren_done < 4 then
		call SetBuildUnit( c_tauren_done+1, TAUREN ) 
	endif
	if c_food_used <= 95 and c_zep < 1 then
		call GetZeppelin()
	endif
endfunction
function harvest_gold takes integer townid returns nothing
    if TownHasMine(townid) and TownCountEx(GREAT_HALL,true,townid) > 0 then
        call HarvestGold(townid,5)
    endif
endfunction
function peon_assignment takes nothing returns nothing
    loop
        call ClearHarvestAI()
        call harvest_gold(0)
        call harvest_gold(1)
        call harvest_gold(2)
        call harvest_gold(3)
        call HarvestWood(0,20)
        call build_sequence()
        call Sleep(1)
    endloop
endfunction
function main takes nothing returns nothing
    call PickMeleeHero(RACE_ORC)
    call set_skills()
    call StandardAI(function SkillArrays, function peon_assignment, function attack_sequence)
    call StartThread(function set_vars)
    call PlayGame()
endfunction